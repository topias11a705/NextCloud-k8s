{{- if .Values.nextcloud.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
  namespace: {{ .Values.namespace }}
  labels:
    app: nextcloud
spec:
  replicas: {{ .Values.nextcloud.replicas }}
  selector:
    matchLabels:
      app: nextcloud
  template:
    metadata:
      labels:
        app: nextcloud
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9000"
    spec:
      containers:
      - name: nextcloud
        image: {{ .Values.nextcloud.image }}
        ports:
        - containerPort: 80
          name: http
        env:
        - name: POSTGRES_HOST
          value: postgresql
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.database }}
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.user }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nextcloud-secrets
              key: postgres-password
        - name: NEXTCLOUD_ADMIN_USER
          value: {{ .Values.nextcloud.adminUser }}
        - name: NEXTCLOUD_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nextcloud-secrets
              key: nextcloud-admin-password
        - name: NEXTCLOUD_TRUSTED_DOMAINS
          value: {{ .Values.ingress.host }}
        volumeMounts:
        - name: nextcloud-data
          mountPath: /var/www/html
        resources:
          {{- toYaml .Values.nextcloud.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /status.php
            port: 80
            httpHeaders:
            - name: Host
              value: {{ .Values.ingress.host }}
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /status.php
            port: 80
            httpHeaders:
            - name: Host
              value: {{ .Values.ingress.host }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: nextcloud-data
        persistentVolumeClaim:
          claimName: nextcloud-data
{{- end }}
